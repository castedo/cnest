#!/bin/bash
set -o errexit

print_usage() {
    THIS_SCRIPT=$'\u001b[1m'"$(basename $0)"$'\u001b[0m'
    echo "Usage:"
    echo "  $THIS_SCRIPT"
    echo "    to print list of available profiles."
    echo "  $THIS_SCRIPT profile"
    echo "    to print valid image_tag or image_ref values."
    echo "  $THIS_SCRIPT profile image_tag [container_name]"
    echo "    for profiles with repository specified."
    echo "  $THIS_SCRIPT profile image_ref container_name"
    echo "    for profiles with no repository specified."
}

if [[ -z $USER ]]; then
  USER=$(id -un)
fi

PROFILE=$1
if [[ -z "$3" ]]; then
    # assume image_tag and not image_ref, until after profile file is sourced
    CONTAINER_NAME=$2
else
    CONTAINER_NAME=$3
fi

PROFILE_DIRS="/etc/cnest/profiles"
if [[ -e $HOME/.config/cnest/profiles ]]; then
    PROFILE_DIRS="$HOME/.config/cnest/profiles $PROFILE_DIRS"
fi

if [[ -z "$PROFILE" ]]; then
    print_usage
    echo Nest profiles available:
    find -L $PROFILE_DIRS -type f -printf "%f\n"
    exit 1
fi

PROFILE_FILE=$(find -L $PROFILE_DIRS -name $PROFILE -print -quit)
CNEST_DEFAULT_ENV_FILE="/etc/cnest/default.env"
eval $(
  source $CNEST_DEFAULT_ENV_FILE
  source $PROFILE_FILE
  echo REPOSITORY=\"$REPOSITORY\"
  echo CREATE_OPTIONS=\"$CREATE_OPTIONS\"
)

if [[ -z "$2" ]]; then
    print_usage
    if [[ $REPOSITORY ]]; then
        echo "Pass image_tag as one of:"
        skopeo list-tags docker://$REPOSITORY
    else
        echo "Pass image_ref"
    fi
    exit 1
fi

if [[ $REPOSITORY ]]; then
    REPO_IMAGE="$REPOSITORY:$2"
else
    if [[ -z "$3" ]]; then
        print_usage
        exit 1
    fi
    REPO_IMAGE="$2"
fi

set -x

podman create \
    --userns=keep-id \
    --name "$CONTAINER_NAME" \
    --uts=private \
    --hostname $CONTAINER_NAME.$HOSTNAME \
    --cgroups=enabled \
    --pid=host \
    --workdir "$HOME" \
    $CREATE_OPTIONS \
    $REPO_IMAGE \
    sleep +Inf

# check if /opt/nestkit exists by attempting copy to stdout
if podman cp $CONTAINER_NAME:/opt/nestkit - >/dev/null 2>&1; then
    podman start $CONTAINER_NAME
    podman exec --user root --workdir /opt/nestkit \
        $CONTAINER_NAME /opt/nestkit/usersetup $USER
    podman stop $CONTAINER_NAME
fi

