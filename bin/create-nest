#!/bin/bash
set -o errexit

print_usage() {
    THIS_SCRIPT=$'\u001b[1m'"$(basename $0)"$'\u001b[0m'
    echo "Usage:"
    echo "  $THIS_SCRIPT"
    echo "    to print list of available profiles."
    echo "  $THIS_SCRIPT profile image_ref container_name"
    echo "    to build nest container."
}

PROFILE=$1
REPO_IMAGE=$2
CONTAINER_NAME=$3
PROFILE_DIR=$HOME/.config/cnest/profiles
if [[ -z $USER ]]; then
  USER=$(id -un)
fi

if [[ -z $CONTAINER_NAME ]]; then
    print_usage
    if [[ -z $PROFILE ]]; then
        if [[ ! -d $PROFILE_DIR ]]; then
            mkdir -p $PROFILE_DIR
            cp -ra $(python3 -m cnest.getpath starter-profiles)/. $PROFILE_DIR
        fi
        echo Profiles available from $PROFILE_DIR:
        ls --hide="_*" $PROFILE_DIR
    fi
    exit 1
fi

ERRMSG="Error reading permissions profile $PROFILE_DIR/$PROFILE"
trap "echo $ERRMSG" EXIT
ASSIGNMENT=$(
    set -o errexit
    cd "$PROFILE_DIR"
    source "$PROFILE"
    echo CREATE_OPTIONS=\"$CREATE_OPTIONS\"
)
trap - EXIT
eval $ASSIGNMENT

set -x

podman create \
    --userns=keep-id \
    --name "$CONTAINER_NAME" \
    --uts=private \
    --hostname $CONTAINER_NAME.$HOSTNAME \
    --cgroups=enabled \
    --pid=host \
    $CREATE_OPTIONS \
    $REPO_IMAGE \
    sleep +Inf

# check if /opt/nestkit exists by attempting copy to stdout
if podman cp $CONTAINER_NAME:/opt/nestkit - >/dev/null 2>&1; then
    podman start $CONTAINER_NAME
    podman exec --user root --workdir /opt/nestkit \
        $CONTAINER_NAME /opt/nestkit/boostuser $USER
    podman exec --user $USER --workdir /opt/nestkit \
        $CONTAINER_NAME /opt/nestkit/userinit
    podman stop $CONTAINER_NAME
fi

