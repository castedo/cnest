#!/bin/bash

if [[ -z "$1" ]]; then
  THIS_SCRIPT=$'\u001b[1m'"$(basename $0)"$'\u001b[0m'
  echo "Usage:"
  echo "  [USER=user] $THIS_SCRIPT container_pattern [command]"
  exit 1
fi

PATTERN="$1"
shift
COMMAND="$@"
if [[ -z $USER ]]; then
  USER=$(id -un)
fi

if command -v guess-container &>/dev/null; then
  # if guess-container can be run, then guess full container name
  CONTAINER=$(guess-container $PATTERN)
  if [[ -z "$CONTAINER" ]]; then
    echo "Can not find container matching: $PATTERN"
    exit 1
  fi
else
  CONTAINER=$PATTERN
fi

# check if cnest-entry exists by trying to copy from container to stdout
if podman cp $CONTAINER:/usr/bin/cnest-entry - >/dev/null 2>&1; then
  COMMAND="/usr/bin/cnest-entry $COMMAND"
else
  if [[ -z $COMMAND ]]; then
    COMMAND="/bin/bash --login"
  fi
fi

podman start $CONTAINER

REALPWD=$(realpath "$PWD")
podman exec -it \
  -e LANG \
  -e TERM \
  -e DISPLAY \
  --detach-keys="" \
  --user $USER \
  --workdir /home/$USER \
  -e CNEST_PWD="$PWD" \
  -e CNEST_PWD_DEV_INODE=$(stat --printf=%d:%i "$REALPWD") \
  $CONTAINER \
  $COMMAND

NUM_EXEC=$(podman container inspect --format "{{len .ExecIDs}}" $CONTAINER)
if [[ $NUM_EXEC -eq 0 ]]; then
  podman stop $CONTAINER
fi

